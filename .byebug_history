c
exit
*paramsValues
c
paramsValues[0].is_a?(Integer)
paramsValues.is_a?(Integer)
paramsValues.is_a?(integer)
disp where_line
disp paramsValues
set  paramsValues
s  paramsValues
i paramsValues
w where_line
where_line w
where_line
c
n
self.table_name
paramsValues
where_line
c
self.table_name
keys
paramsValues
c
keys
paramsValues
c
exit
paramsValues
keys
self.table_name
self
c
*paramsValues
paramsValues
params.values
params
paramsValus
keys
c
params.keys[0].to_s
params.keys[0]
params.keys
keys
key
params
c
params
c
n
col
#{col}
(#{col})
        (#{col})
col
exit
self.id
c
col
exit
col
c
xc
x
DBConnection.methods
DBConnection.last_insert_row_id
DBConnection.keys
DBConnection
c
self.class.table_name.lengthc
self.class.table_name.length
self.class.length
self.class[-1]
self.class.last
self.class
self.class.table_name
self.class.last
self.class
self.class.table_name
self.class.table_name.last
self.id
self
c
attribute_values.drop(1)
attribute_values
attribute_vlaues
c
attribute_values
self.class.table_name
c
a
c
c)
self.send(:id)
self.class.columns
    }
      self.send(attr)
self.class.columns.map { |attr|
c
exit
attribute_values
exit
c
self.send(:name)
self.send(:name")
self.send(name)
self.send(attr)
attributes
attributes)
self.send(:name)
self.send(:id)
self.send(:owner_id)
self.send(:name)
self.class.columns
attr
self.send(:cat)
self.send(id)
self.send(1)
attr
:id
self.send(:id)
attr
self
c
self.class.columns
self.class
c
exit
attribute_values
[attribute_values]
*[attribute_values]
*attribute_values
attribute_values
c
attribute_values
c
@attributes.map do |col, val| val end
@attributes
@attributs
      val
 @attributes.map do |col, val|
    end
      val
@attributes.map do |col, val|
c
exit
self.class.table_name
self.class
self
commas
quest_marks
attributes.keys.join(",")
attributes.keys
attributes
exit
num_commas
