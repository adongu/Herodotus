c
model_class.is_a?(Object)
model_class.is_a?(Object0
model_class
model_class.table_name
model_class
c
@class_name.constantize
@class_name.contantize
@class_name
self
c
x
c
options
self_class_name
name
c
self_class_name
name
c
options[:foreign_key]
@foreign_key
foreign_key
c
options
self_class_name
options
c
options
otpions
c
options
c
options
self_class_name
name
c
options
name
c
name.capitalize
name
name.to_s
self
options
name
c
class_name
foreign_key
c
human["fname"]
human.send("fname")
human.send(fname)
human["fname"]
human["id"]
human.is_a?(Array)
human.is_a?(Object)
human.is_a(Object)
human
c
human
human."fname"
human.["fname"]
human.keys
human
human[fname]
human.fname
human
humans[0]
humans
Human
c
table_name
where_line
c
@cols
@syms
col
c
cats.length
table_name
*
where_line
c
@cols.first.map do |col| col.to_sym end
@cols.first
@cols
@syms
Wsysm
c
Human
@cols
@sysms
n
@syms
@cyms
@cols
col
c
Cat.where(name: 'Breakfast')
c
Cat.where(name: 'Breakfast')
c
Cat.where(name: 'Breakfast')
Cat.where(name: "Breakfast")
Cat.where(id: "1")
Cat.where(id: 1)
Cat.where
Cat.table_name.where
Cat.table_name.last
Cat.table_name.length
Cat.table_name
Cat
Cat.first
Cat
where_line
c
Cat.where(id: 1)
Cat.where()
Cat.where(name: "Matt")
c
@cols
c
cats.firstcats.firstc
cats
cat
cats
c
Cat.where(name: 'Breakfast')
Cat
cat
n
s
c
("#{where_line}")
"#{where_line}"
#{where_line}
(where_line)
where_line
self.table_name
where_line
        #{where_line}
      WHERE
        #{self.table_name}
      FROM
        *
SELECT
c
params
paramsValues
"#{where_line}"
where_line
c
exit
*paramsValues
c
paramsValues[0].is_a?(Integer)
paramsValues.is_a?(Integer)
paramsValues.is_a?(integer)
disp where_line
disp paramsValues
set  paramsValues
s  paramsValues
i paramsValues
w where_line
where_line w
where_line
c
n
self.table_name
paramsValues
where_line
c
self.table_name
keys
paramsValues
c
keys
paramsValues
c
exit
paramsValues
keys
self.table_name
self
c
*paramsValues
paramsValues
params.values
params
paramsValus
keys
c
params.keys[0].to_s
params.keys[0]
params.keys
keys
key
params
c
params
c
n
col
#{col}
(#{col})
        (#{col})
col
exit
self.id
c
col
exit
col
c
xc
x
DBConnection.methods
DBConnection.last_insert_row_id
DBConnection.keys
DBConnection
c
self.class.table_name.lengthc
self.class.table_name.length
self.class.length
self.class[-1]
self.class.last
self.class
self.class.table_name
self.class.last
self.class
self.class.table_name
self.class.table_name.last
self.id
self
c
attribute_values.drop(1)
attribute_values
attribute_vlaues
c
attribute_values
self.class.table_name
c
a
c
c)
self.send(:id)
self.class.columns
    }
      self.send(attr)
self.class.columns.map { |attr|
c
exit
attribute_values
exit
